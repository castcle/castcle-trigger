version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - BASE_REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $BASE_REPOSITORY_URI
      - REPOSITORY_NAME=mongodb-triggers
      - REPOSITORY_URI=$BASE_REPOSITORY_URI/$REPOSITORY_NAME
      - IMAGE_TAG=$(echo $NODE_ENV)-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Install npm packages...
      - npm install
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG -f Dockerfile .
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - DIGEST=$(aws ecr describe-images --repository-name $REPOSITORY_NAME --image-ids imageTag=$IMAGE_TAG | jq '.imageDetails[0].imageDigest' | tr -d '"')
      - echo digest=$DIGEST
      - sed -i 's@REPOSITORY_URI@'"$REPOSITORY_URI"'@' serverless.yml
      - sed -i 's@DIGEST@'"$DIGEST"'@' serverless.yml
  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      # - echo Destroying Lambda functions...
      # - npm run remove -- -s $NODE_ENV
      - echo Deploying Lambda functions...
      - npm run deploy -- -s $NODE_ENV
